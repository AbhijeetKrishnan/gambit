<sect1 id="gui.efg">
<title>Extensive form games</title>
<para>

</para>

<sect2 id="gui.efg.prelim">
<title>Extensive form games: Conventions and preliminaries</title>

<para>
Gambit displays extensive form games as a tree, with time flowing from
left to right.  As the tree is built, Gambit uses an automatic layout
algorithm to render the tree.
<footnote>
<para>
That is, there is no mechanism currently for customizing the
location of nodes in the tree display.  This is an item on the list for
future enhancement.
</para>
</footnote>
Some options are provided to customize the display of the tree;
see <xref linkend="gui.efg.display"> for details.  The current objective
of these options is to provide sufficient customizability to be able to
use Gambit to create figures suitable for use in classroom materials and
working papers; however, it might not be sufficient at this state for
users who desire fine control over tree figures.
</para>

<para>
Extensive form games have one or more players.  The players
are specified when the game is created (see <xref linkend="gui.efg.file.new">);
players may also be added on the fly using the 
<guilabel>Extensive form properties</guilabel> dialog
(see <xref linkend="gui.efg.edit.game">).
<footnote>
<para>Note that on-the-fly player adding is not currently supported in
normal form games.
</para>
</footnote>
Each player is indexed by her player number, which ranges from 1 to the
number of players.  The player number 0 is reserved for the 
player called &quot;chance&quot; or &quot;nature&quot;.
For each player, the nodes at which she chooses are partitioned into
information sets.  For convenience, Gambit assigns an ordered pair
to each information set of the form (player number, information set number).
The information set number ranges from 1 to the number of information
sets a player has, and information set numbers are only unique within
a player; therefore, information set (1,1), which is player 1's information
set number 1, is distinct from information set (2,1), which is player 2's
information set number 1.  
The information set ID's are arbitrary, and have no significance in terms
of analysis.  By default, Gambit displays information set ID's below
each node; this feature can be configured by editing the display
settings (see <xref linkend="gui.efg.display">).
</para>

<para>
Gambit has a flexible interpretation of the concept of an outcome.
An outcome is an object which has associated with it a vector of
payoffs, one for each player.  A particular outcome may appear at
multiple nodes in a tree, a feature used in the poker game example
in <xref linkend="gui.poker">.  Outcomes may even appear at
non-terminal nodes within a game; in such cases, they are interpreted
as incremental payoffs.  Permitting outcomes to appear at non-terminal
nodes makes it easier to construct trees where a stage game is repeated,
with the supergame payoffs being the sum of the stage game payoffs earned.
<footnote>
<para>
A two-stage Bayesian game using outcomes at non-terminal nodes in this
fashion can be found in the <filename>bayes2a.efg</filename> game in
the standard Gambit distribution.
</para>
</footnote>
</para>

<para>
Most of the operations involving constructing and editing games require
the selection of a node.  A node is selected by clicking with the left
mouse button on a node, which may be represented by a circle, square,
diamond, or horizontal line, depending on the selected style.  A selected
node is drawn using a thicker line than its non-selected counterparts.
Left-clicking the tree window away from any node unselects all nodes.
Shortcuts are provided for quickly navigating through a tree; see
<xref linkend="gui.efg.nav"> for a complete list.
</para>

</sect2>

<sect2 id="gui.efg.file.new">
<title>Creating a new extensive form game</title>

<para>
</para>
</sect2>

<sect2 id="gui.efg.file.open">
<title>Reading an extensive form game from disk</title>

<para>
</para>
</sect2>


<sect2 id="gui.efg.insert">
<title>Adding or inserting a move into the tree</title>

<para>
This dialog is used to add a move to the extensive form game, and is
accessed through the {\bf Edit->Node->AddMove} or {\bf 
Edit->Node->InsertMove} menu items in the extensive form GUI.  

Select the player to be in control of the move by clicking on a player
in the Player choicebox.  The player can be either chance or an
existing player, or a "New Player."  If New Player is chosen, a new
player will be created and given a default name "Player \#."  If this
node is to belong to an existing information set, choose the desired
infoset from the Infoset choicebox.  If a new information set is to be
created, just enter the number of branches desired.  If the node
created was a CHANCE node, you will be prompted for the
probabilities associated with each branch.
</para>

</sect2>

<sect2 id="gui.efg.nav">
<title>Navigating extensive form game trees</title>

<para>

</para>
</sect2>

<sect2 id="gui.efg.edit.game">
<title>Viewing and changing extensive form game properties</title>

<para>
</para>

</sect2>

  <sect2 id="gui.efg.display" xreflabel="Changing how the tree is displayed" >
    <title>Changing how the tree is displayed</title>
    <para>
      The graphical interface offers a number of options which
      allow the user to customize the display of game trees to
      his or her own tastes.
    </para>

      <sect3><title>Customizing tree layout</title>
	<para>
	  The layout of a game tree can be customized using the
	  Layout Parameters dialog, which is accessible by way of the
	  <guimenuitem>Layout</guimenuitem> item on the
	  <guimenu>Format</guimenu> menu.
	</para>

	<para>
	  All lengths are in pixels.  The
	  <guilabel>Show Infoset Lines</guilabel>
	  choicebox is used to select a mode for display of
	  information sets on the extensive form. 
	  <guilabel>None</guilabel> means no
	  lines are drawn connecting members of information sets.
	  <guilabel>Same Level</guilabel>
	  means only members of an information set at
	  the same level of the tree are connected with lines. 
	  <guilabel>All Levels</guilabel> means that all nodes are connected,
	  using lagged lines if necessary.  (See Figure~\ref{fig_lag_iset}
	  in the extensive form section for an
	  illustration.)
	</para>
      </sect3>

      <sect3>
	<title>Customizing tree legends</title>
	<para>
	  The text labels displayed on nodes and branches can be
	  customized using the Legends dialog
	  (<guimenu>Format</guimenu> menu, <guimenuitem>Legends</guimenuitem>
	  item).
	</para>

	<para>
	  There are two positions where information can be displayed for each
	  branch (above and below.)  In each of these positions, you can select
	  to display information about the game tree (such as branch numbers or
	  action names), or information about the currently selected solution
	  (such as action probabilities or action values).  Similarly, there are
	  three positions at which information can be displayed for a node
	  (above, below, and to the right).  In the positions above and below
	  the node, you can select to display information about the game tree
	  (such as infoset name or ID), or information about the currently
	  selected solution (such as realization probabilities, node values,
	  belief probabilities). The position to the right of the node is
	  reserved for information relating to outcomes, and here you can select
	  to display the outcome name or outcome vector.
	</para>
      </sect3>

  </sect2>
</sect1>
