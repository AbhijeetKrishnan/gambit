<sect1 id="apiref.infoset">
<title>Information sets</title>

<para>
</para>

<sect2 id="apiref.infoset.deleteemptyinfoset">
<title>DeleteInfoset</title>
<indexterm><primary>DeleteInfoset</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
void gbtGameInfoset::DeleteInfoset(void)
</synopsis>
</para>
</formalpara>

<para>
<function>DeleteInfoset</function> deletes
<parameter>infoset</parameter> from its extensive form game.  An
information set may be deleted only when it has no members; otherwise,
this function has no effect.
</para>

</sect2>

<sect2 id="apiref.infoset.GetAction">
<title>GetAction</title>
<indexterm><primary>GetAction</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtGameAction gbtGameInfoset::GetAction(int p_index) const
</synopsis>
</para>
</formalpara>

<para>
<function>GetAction</function> returns the action numbered
<parameter>p_index</parameter> from the list of actions at the
information set.  Each information set's actions are numbered
sequentially beginning at one.  An exception is thrown if the index
is out of range.
</para>

</sect2>


<sect2 id="apiref.infoset.getgame">
<title>GetGame</title>
<indexterm><primary>GetGame</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtGame gbtGameInfoset::GetGame(void) const
</synopsis>
</para>
</formalpara>

<para>
<function>GetGame</function> 
returns the extensive form game to which the information set belongs.
</para>

</sect2>


<sect2 id="apiref.infoset.getlabel">
<title>GetLabel</title>
<indexterm><primary>GetLabel</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtText gbtGameInfoset::GetLabel(void) const
</synopsis>
</para>
</formalpara>

<para>
<function>GetLabel</function>
returns the text label of the information set.
The empty string is returned if the information set object is null.
</para>

</sect2>

<sect2 id="apiref.infoset.getmember">
<title>GetMember</title>
<indexterm><primary>GetMember</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtGameNode gbtGameInfoset::GetMember(int p_index) const
</synopsis>
</para>
</formalpara>

<para>
<function>GetMember</function> returns the member numbered
<parameter>p_index</parameter> from the list of nodes belonging to the
information set.  Each information set's nodes are numbered
sequentially beginning at one.  An exception is thrown if the index
is out of range.
</para>

</sect2>

<sect2 id="apiref.infoset.setlabel">
<title>SetLabel</title>
<indexterm><primary>SetLabel</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
void gbtGameInfoset::SetLabel(const gbtText &amp;p_label)
</synopsis>
</para>
</formalpara>

<para>
<function>SetLabel</function> sets the text label of the information
set.
</para>

</sect2>


</sect1>
