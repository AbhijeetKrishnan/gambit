<sect1 id="apiref.nfgcontingency">
<title>Contingency (strategy profile) in normal form</title>

<para>
A contingency, or strategy profile, is an object specifying one (pure)
strategy for each player in a normal form game.  Contingencies are useful
for accessing entries in the normal form.
</para>

<sect2 id="apiref.nfgcontingency.getoutcome">
<title>GetOutcome</title>
<indexterm><primary>GetOutcome</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtGameOutcome gbtGameContingency::GetOutcome(void) const
</synopsis>
</para>
</formalpara>

<para>
<function>GetOutcome</function> returns the outcome resulting from the
strategy profile.
</para>

</sect2>


<sect2 id="apiref.nfgsupport.getstrategy">
<title>GetStrategy</title>
<indexterm><primary>GetStrategy</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtGameStrategy gbtGameContingency::GetStrategy(gbtGamePlayer p_player)
</synopsis>
</para>
</formalpara>

<para>
<function>GetStrategy</function> returns the strategy played by 
<parameter>p_player</parameter> in the profile.
</para>

</sect2>

<sect2 id="apiref.nfgcontingency.setoutcome">
<title>SetOutcome</title>
<indexterm><primary>SetOutcome</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
void gbtGameContingency::SetOutcome(gbtGameOutcome p_outcome)
</synopsis>
</para>
</formalpara>

<para>
<function>SetOutcome</function> sets the outcome resulting when players
play according to the strategy profile.
</para>

</sect2>

<sect2 id="apiref.nfgcontingency.setstrategy">
<title>SetStrategy</title>
<indexterm><primary>SetStrategy</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
void gbtGameContingency::SetStrategy(gbtGameStrategy p_strategy)
</synopsis>
</para>
</formalpara>

<para>
<function>SetStrategy</function> includes <parameter>p_strategy</parameter>
in the strategy profile, replacing the strategy specified for the
corresponding player.
</para>

</sect2>

</sect1>
