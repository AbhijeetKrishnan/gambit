<sect1 id="gui.poker">
<title>A simple game of poker</title>
  <para>
This chapter takes a high-level tour of the Gambit graphical interface using
as an example the simple one-card poker game appearing in
<citation><xref linkend="Mye91"></citation>.
<indexterm><primary>Poker</primary></indexterm>
This game is included in the Gambit distribution
as <filename>poker.efg</filename>,
and can be found in the <filename class="directory">efg</filename>
subdirectory
of the directory in which Gambit is installed.  (For example, in the
standard installation under Microsoft Windows, this would be
<filename>c:/Program Files/Gambit/efg/poker.efg</filename>.)
By convention, files ending in
<filename>.efg</filename>
 store extensive form games, and files ending in
<filename>.nfg</filename> store normal form games. 
</para>

<para>
When launched, Gambit displays a window similar to this:
<footnote>
<para>
All the screenshots contained in this manual were
taken on a Linux system using the Sawfish window manager.
If you use a different operating system or window manager,
your windows may appear slightly differently.
</para>
</footnote>
<screenshot>
<graphic fileref="blankefg.png">
</screenshot>
This window contains
a trivial extensive form game, containing exactly one node, which is both
root and terminal.  <xref linkend="gui.efg">
describes how to use the extensive form
window to construct and edit extensive form games.
</para>

<para>
There are three equivalent ways to open a saved game from any window in Gambit:
    <orderedlist>
      <listitem>
	<para>
	  Select the <guimenuitem>Open</guimenuitem> menu item from the
	  <guimenu>File</guimenu> menu;
	  </para>
      </listitem>
      <listitem>
	<para>
	  Use the shortcut key combination 
	  <keycap>Ctrl</keycap>-<keycap>O</keycap>;
	</para>
      </listitem>
      <listitem>
	<para>
	  Click on the file folder icon on the toolbar.
	</para>
      </listitem>
    </orderedlist>

Any of these actions leads to a dialog box for selecting a file to
open.  Use the dialog to locate and select the 
<filename>poker.efg</filename>
file.  After doing so, Gambit will display the opened game in a new
window:
<screenshot>
<graphic fileref="poker.png">
</screenshot>
The screenshot shows
the game as rendered by Gambit using the default settings.  Many
display options are available to customize the appearance of game trees;
see <xref linkend="gui.efg.display"> for details.
  </para>

<para>
The extensive form game tree is drawn with the root node at far left,
with branches going from left to right, and successive nodes to the
right of their predecessors.  Each node is represented as a horizontal
line.  Every non-terminal node is a decision node and is represented
by the color of the player who makes a decision at that node.  Nodes
are connected by branches, which are represented by two connected line
segments, which can be thought of as the &quot;fork&quot; and the
&quot;tine&quot;.  The fork is used in the graphics display to indicate
graphically the probabilities of taking each branch.  The tine is used
as a location at which to display textual information about the
branch.
  </para>

<para>
The poker game begins with Chance selecting either a Red card or
a Black card to deal to Player 1.  This is represented in the tree
by the grey node and subsequent branches labeled &quot;Red&quot; and &quot;Black&quot;.
The forks of the branches have superimposed black lines stretching
halfway along the fork, indicating a probability of one-half that
each card is chosen.  After each of the two possible draws, Player 1,
whose nodes are colored in red, has the option to either &quot;Raise&quot; or
&quot;Fold&quot;.  If Player 1 folds, the game ends; if he raises, Player2,
with nodes colored in blue,
then has the option to either &quot;Meet&quot; or &quot;Pass&quot; in either case,
the game ends after Player 2's choice.   All terminal nodes are drawn
in black in this picture.
  </para>

<para>
In this game, outcomes are attached to each of the six terminal
nodes, and payoffs to the two players are indicated to the right
of the corresponding node, with Player 1's payoff listed first, then
Player 2's.  Outcomes are indicated to the right of nodes, but may
be attached to nonterminal nodes, in which case their payoffs are 
interpreted as incremental payoffs.   Outcomes may also be displayed
by textual name rather than by their payoff vector.
  </para>

<para>
Information sets are identified by a pair of numbers.  The first
number indicates the number of the player who has the choice at the information
set.  The second number provides an identifying number for the
information set which is unique among that player's information sets.
Whenever possible, information sets are also
represented by vertical lines connecting the nodes that are members of
the same information set.
In this game, Player 1 observes which
card he has drawn prior to making his choice to &quot;Raise&quot; or
&quot;Fold&quot; ;
therefore, the node following Chance's &quot;Red&quot; move is in a separate
information set, numbered (1,1), from the node following Chance's
&quot;Black&quot; move, which is in information set (1,2).  Player 2, on the
other hand, does not observe Player 1's card, and so Player 2 has one
information set, numbered (2,1), with two member nodes connected by
a vertical line.
  </para>

<para>
The analytical features of Gambit are located on the <guimenu>Tools</guimenu>
menu.
<screenshot>
<graphic fileref="efgtools.png">
</screenshot>
These include:
<itemizedlist>
<listitem>
<para>
<guimenuitem>Dominance</guimenuitem>,
which interfaces to routines for identifying and eliminating
dominanted actions; 
</para>
</listitem>
<listitem>
<para>
<guimenuitem>Equilibrium</guimenuitem>,
which provedes access to
algorithms provided by Gambit to compute Nash equilibria of
the game;
</para>
</listitem>
<listitem>
<para>
<guimenuitem>Qre</guimenuitem>,
which organizes Gambit's facilities for computing and manipulating
quantal response equilibria;
</para>
</listitem>
<listitem>
<para>
<guimenuitem>Normal form</guimenuitem>,
which contains items to create normal
forms corresponding to the extensive form game.
</para>
</listitem>
</itemizedlist>
The <guimenuitem>Dominance</guimenuitem>, 
<guimenuitem>Equilibrium</guimenuitem>, and
<guimenuitem>Normal form</guimenuitem> items will be discussed in the
next sections.
</para>
</sect1>

<sect1><title>Finding Nash equilibria using the extensive form</title>
<para>
The analysis begins by searching for actions which might be dominated
by other actions at the same move.  The <guimenuitem>Dominance</guimenuitem>
item on the <guimenu>Tools</guimenu> menu presents a dialog box giving
options for finding dominated actions:
<screenshot>
<graphic fileref="efgdom.png">
</screenshot>
</para>

<para>
There are four sets of options:
<itemizedlist>
<listitem>
<para>
<guilabel>Type</guilabel>: Actions can be removed based upon either
strong (or strict) dominance, or weak dominance;
</para>
</listitem>
<listitem>
<para>
<guilabel>Conditional</guilabel>: Chooses whether actions are considered
dominated overall, or only conditional on their information set being
reached;
</para>
</listitem>
<listitem>
<para>
<guilabel>Depth</guilabel>: One round of dominance elimination can be
performed; or, Gambit can continue to eliminate strategies until no
more strategies are dominated;
</para>
</listitem>
<listitem>
<para>
<guilabel>Players</guilabel>: Actions for all, or only some, of the players
in the game may be considered in doing elimination.
</para>
</listitem>
</itemizedlist>
In this example, we will look for one Nash equilibrium of this game, so we
will conditionally eliminat weakly dominated strategies iteratively
for all players, as shown in the screenshot.
<footnote>
<para>
For an overview of tips and techniques for finding Nash equilibria,
see <xref linkend="app.alg.start">.
</para>
</footnote>
</para>
<para>
After clicking <guilabel>OK</guilabel>, a progress dialog briefly
appears, and then the game display appears like this:
<screenshot>
<graphic fileref="pokerelim.png">
</screenshot>
The action &quot;Fold&quot; is weakly dominated for Player 1 when he
has the Red card; therefore, in this display, the &quot;Fold&quot; action
is erased from the game tree.
</para>
<para>
Gambit keeps track of all the sets of actions computed.  On the
<guimenu>View</guimenu> menu is an item <guimenuitem>Supports</guimenuitem>.
Selecting this item displays an additional panel on the extensive form
display, as shown below.  (You may need to resize your window a bit to be
able to see the whole tree as in this screenshot.)
<screenshot>
<graphic fileref="pokersupport.png">
</screenshot>
The <guilabel>Supports</guilabel> tab
in the information pane on the left schematically displays
the current support.  The action &quot;Fold&quot; in Fred's first information
set is light grey, indicating it is not in the support called
&quot;Support2&quot;.  All other actions are in black, indicating they are
included in the support.  The drop-down box at the top of the support
display lists all the supports that have been computed; if you click on
it now, you'll see the support &quot;Full Support&quot;, which is the
support containing all actions for all players, and &quot;Support2&quot;,
the support we obtained by our dominance elimination.  If you select
&quot;Full Support&quot; from the dropdown, the tree display will return
to its original form, and the &quot;Fold&quot; action in Fred's first
information set will appear in black in the schematic display.
</para>

</sect1>

<sect1><title>Finding Nash equilibria using the normal form</title>
<para>
You can compute Nash equilibria on the normal form.
  </para>
</sect1>

<sect1><title>Viewing normal forms</title>
<para>
You can have Gambit show you the normal form of the game, both
reduced and agent.
  </para>
</sect1>
    
