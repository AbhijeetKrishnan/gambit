<sect1 id="apiref.action">
<title>Actions</title>

<para>
</para>


<sect2 id="apiref.action.deleteaction">
<title>DeleteAction</title>
<indexterm><primary>DeleteAction</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
void gbtEfgAction::DeleteAction(void)
</synopsis>
</para>
</formalpara>

<formalpara>
<title>GCL usage</title>
<para>
<synopsis>
DeleteAction[action->ACTION] =: INFOSET 
</synopsis>
</para>
</formalpara>

<para>
<function>DeleteAction</function> deletes
<parameter>action</parameter> from its information set.  As a
consequence, the corresponding subtrees associated with the action
from each member of the information set are deleted.  The GCL version
returns the information set to which <parameter>action</parameter>
belonged.  It is an error if <parameter>action</parameter> is the only
action at its information set.
</para>

</sect2>


<sect2 id="apiref.action.getchanceprob">
<title>GetChanceProb</title>
<indexterm><primary>GetChanceProb</primary></indexterm>
<indexterm><primary>ChanceProb (GCL function)</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gNumber gbtEfgAction::GetChanceProb(void) const
</synopsis>
</para>
</formalpara>

<formalpara>
<title>GCL usage</title>
<para>
<synopsis>
ChanceProb[action->ACTION] =: NUMBER 
</synopsis>
</para>
</formalpara>

<para>
<function>GetChanceProb</function> (<function>ChanceProb</function> in
the GCL) returns the probability of 
<parameter>action</parameter> being chosen at its information
set by the chance player.  It is an error if <parameter>action</parameter>
is not an action
which is chosen by the chance player.
</para>

</sect2>

<sect2 id="apiref.action.getinfoset">
<title>GetInfoset</title>
<indexterm><primary>GetInfoset</primary></indexterm>
<indexterm><primary>Infoset (GCL function)</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gbtEfgInfoset gbtEfgAction::GetInfoset(void) const
</synopsis>
</para>
</formalpara>

<formalpara>
<title>GCL usage</title>
<para>
<synopsis>
Infoset[action->ACTION*] =: INFOSET 
</synopsis>
</para>
</formalpara>

<para>
<function>GetInfoset</function> (<function>Infoset</function> in the GCL)
returns the information set to which <parameter>action</parameter> belongs.
The null
action is assumed to belong to the null information set.
</para>

</sect2>

<sect2 id="apiref.action.getlabel">
<title>GetLabel</title>
<indexterm><primary>GetLabel</primary></indexterm>
<indexterm><primary>Name (GCL function)</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
gText gbtEfgAction::GetLabel(void) const
</synopsis>
</para>
</formalpara>

<formalpara>
<title>GCL usage</title>
<para>
<synopsis>
Name[x->ACTION*] =: TEXT
</synopsis>
</para>
</formalpara>

<para>
<function>GetLabel</function> (<function>Name</function> in the GCL)
returns the text label of the action.
The empty string is returned if the action object is null.
</para>

</sect2>


<sect2 id="apiref.action.setlabel"> 
<title>SetLabel</title>
<indexterm><primary>SetLabel</primary></indexterm>
<indexterm><primary>SetName (GCL function)</primary></indexterm>

<formalpara>
<title>C++/Python usage</title>
<para>
<synopsis>
void gbtEfgAction::SetLabel(const gText &amp;p_label)
</synopsis>
</para>
</formalpara>

<formalpara>
<title>GCL usage</title>
<para>
<synopsis>
SetName[x->ACTION, name->TEXT] =: ACTION
</synopsis>
</para>
</formalpara>

<para>
<function>SetLabel</function> (<function>SetName</function> in the GCL) 
sets the text label of the action.  The GCL version returns the action.
</para>

</sect2>

</sect1>

