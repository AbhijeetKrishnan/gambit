<chapter id="file">
<title>Game representation formats</title>
<para>
This section documents the file formats recognized by Gambit.  These
file formats are text-based and designed to be readable and
editable by hand by humans to the extent possible, although programmatic
tools to generate and manipulate these files are almost certainly 
needed for all but the most trivial of games.
</para>

<para>
These formats can be viewed as being low-level.  They define games
explicitly in terms of their structure, and do not support any sort
of parameterization, macros, and the like.  Thus, they are adapted largely
to the type of input required by the numerical methods for computing
Nash equilibria, which only apply to a particular realization of
a game's parameters.  Higher-level tools, whether the graphical
interface or scripting applications, are indicated for doing parametric
analysis and the like.
</para>

<sect1 id="file.common">
<title>Conventions common to all file formats</title>

<para>
Several conventions are common to the interpretation of the file
formats listed below.
</para>

<formalpara>
<title>Whitespace is not significant</title>
<para>
In general, whitespace (carriage returns, horizontal and vertical tabs, and
spaces) do not have an effect on the meaning of the file.  The only exception
is inside explicit double-quotes, where all characters are significant.  The
formatting shown here is the same as generated by the Gambit code and 
has been chosen for its readability; other formattings are possible (and
legal).
</para>
</formalpara>

<formalpara>
<title>Text labels</title>
<para>
Most objects in an extensive game may be given textual labels.  These
are prominently used in the graphical interface, for example, and it
is encouraged for users to assign nonempty text labels to objects if
the game is going to be viewed in the graphical interface.  In all
cases, these labels are surrounded by the quotation character (&quot;).
The use of an explicit &quot; character within a text label can be
accomplished by preceding the embedded &quot; characters with a backwards
slash (\).  
<example>
<title>Escaping quotes in a text label</title>
<para>
This is an alternate version of the first line of the example file,
in which the title of the game contains the term Bayesian game in
quotation marks.
<programlisting>
EFG 2 R "An example of a \"Bayesian game\"" { "Player 1" "Player 2" }
</programlisting>
</para>
</example>
</para>

<formalpara>
<title>Numerical data</title>
<para>
Numerical data, namely, the payoffs at outcomes, and the action
probabilities for chance nodes, may be expressed in integer, decimal,
or rational formats.  In all cases, numbers are understood by Gambit
to be exact, and represented as such internally.  For example, the
numerical entries <literal>0.1</literal> and <literal>1/10</literal>
represent the same quantity.
<note>
<para>
In versions 0.97 and prior, Gambit distinguished between floating
point and rational data.  In these versions, the quantity
<literal>0.1</literal> was represented interally as a floating-point
number.  In this case, since <literal>0.1</literal> does not have an
exact representation in binary floating point, the values
<literal>0.1</literal> and <literal>1/10</literal> were not identical,
and some methods for computing equilibria could give (slightly) 
different results for games using one versus the other.  In particular,
using rational-precision methods on games with the floating point numbers
could give unexpected output, since the conversion of <literal>0.1</literal>
first to floating-point then to rational would involve roundoff error.
This is largely of technical concern, and the current Gambit implementation
now behaves in such a way as to give the &quot;expected&quot; result
when decimal numbers appear in the file format.
</para>
</note>
</para>

</sect1>

<sect1 id="file.efg">
<title>The extensive game (.efg) file format</title>

<para>
The extensive game (.efg) file format has been used by Gambit, with
minor variations, to represent extensive games since circa 1994.  It
replaced an earlier format, which had no particular name but which 
had the conventional extension .dt1.  It is intended that some new
formats will be introduced in the future; however, this format will
be supported by Gambit, possibly through the use of converter programs to
those putative future formats, for the foreseeable future.
</para>

<sect2 id="file.efg.sample">
<title>A sample file</title>

<para>
This is a sample file illustrating the general format of the file.  This
file is similar to the one distributed in the Gambit distribution
under the name <filename>bayes1a.efg</filename>.
</para>

<programlisting>
EFG 2 R "General Bayes game, one stage" { "Player 1" "Player 2" }
c "ROOT" 1 "(0,1)" { "1G" 0.500000 "1B" 0.500000 } 0
c "" 2 "(0,2)" { "2g" 0.500000 "2b" 0.500000 } 0
p "" 1 1 "(1,1)" { "H" "L" } 0
p "" 2 1 "(2,1)" { "h" "l" } 0
t "" 1 "Outcome 1" { 10.000000 2.000000 }
t "" 2 "Outcome 2" { 0.000000 10.000000 }
p "" 2 1 "(2,1)" { "h" "l" } 0
t "" 3 "Outcome 3" { 2.000000 4.000000 }
t "" 4 "Outcome 4" { 4.000000 0.000000 }
p "" 1 1 "(1,1)" { "H" "L" } 0
p "" 2 2 "(2,2)" { "h" "l" } 0
t "" 5 "Outcome 5" { 10.000000 2.000000 }
t "" 6 "Outcome 6" { 0.000000 10.000000 }
p "" 2 2 "(2,2)" { "h" "l" } 0
t "" 7 "Outcome 7" { 2.000000 4.000000 }
t "" 8 "Outcome 8" { 4.000000 0.000000 }
c "" 3 "(0,3)" { "2g" 0.500000 "2b" 0.500000 } 0
p "" 1 2 "(1,2)" { "H" "L" } 0
p "" 2 1 "(2,1)" { "h" "l" } 0
t "" 9 "Outcome 9" { 4.000000 2.000000 }
t "" 10 "Outcome 10" { 2.000000 10.000000 }
p "" 2 1 "(2,1)" { "h" "l" } 0
t "" 11 "Outcome 11" { 0.000000 4.000000 }
t "" 12 "Outcome 12" { 10.000000 2.000000 }
p "" 1 2 "(1,2)" { "H" "L" } 0
p "" 2 2 "(2,2)" { "h" "l" } 0
t "" 13 "Outcome 13" { 4.000000 2.000000 }
t "" 14 "Outcome 14" { 2.000000 10.000000 }
p "" 2 2 "(2,2)" { "h" "l" } 0
t "" 15 "Outcome 15" { 0.000000 4.000000 }
t "" 16 "Outcome 16" { 10.000000 0.000000 }
</programlisting>

</sect2>

<sect2 id="file.efg.prologue">
<title>Structure of the prologue</title>

<para>
The extensive gamefile consists of two parts: the prologue, or header,
and the list of nodes, or body.  In the example file, the prologue is
the first line.  (Again, this is just a consequence of the formatting
we have chosen and is not a requirement of the file structure itself.)
</para>

<para>
The prologue is
constructed as follows: the first seven characters must be
<programlisting>
EFG 2 R
</programlisting>
</para>

<note>
<para>
Historical reasons for this structure: the digit 2 is a version number,
but since only version 2 files have been supported for more than a
decade, all files have a 2 in this position.  The letter R used to
distinguish files which had rational numbers for numerical data; this
distinction is obsolete, so all new files should have R in this position.
</para>
</note>

<note>
<para>
The current Gambit implementation requires that the first seven
characters of the file be EFG 2 R.  This is an exception to the
whitespace rules given above.  We apologize for any inconvenience.
</para> 
</note>

<para>
The prologue continues with the title of the game. 
Following the title is a list of the names of the
players defined in the game.  This list follows the convention found 
elsewhere in the file of being surrounded by curly braces and delimited
by whitespace (but not commas, semicolons, or any other character).
The order of the players is significant; the first entry in the list
will be numbered as player 1, the second entry as player 2, and so forth.
</para>

</sect2>

<sect2 id="file.efg.body">
<title>Structure of the body (list of nodes)</title>

<para>
The body of the file lists the nodes which comprise the game tree.
These nodes are listed in the prefix traversal of the tree.  The prefix
traversal for a subtree is defined as being the root node of the subtree,
followed by the prefix traversal of the subtree rooted by each child,
in order from first to last.  Thus, for the whole tree, the root node
appears first, followed by the prefix traversals of its child subtrees.
For convenience, the game above follows the convention of one line per
node.
</para>

<para>
Each node entry begins with an unquoted character indicating the type of
the node.  There are three node types:
<itemizedlist>
<listitem>
<para>
<literal>c</literal> for a chance node
</para>
</listitem>
<listitem>
<para>
<literal>p</literal> for a personal player node
</para>
</listitem>
<listitem>
<para>
<literal>t</literal> for a terminal node
</para>
</listitem>
</itemizedlist>

Each node type will be discussed individually below.  There are three numbering
conventions which are used to identify the information structure of the tree.
Wherever a player number is called for, the integer specified corresponds
to the index of the player in the player list from the prologue.  The first
player in the list is numbered 1, the second 2, and so on.  Information 
sets are identified by an arbitrary positive integer which is unique within the
player.  Gambit generates these numbers as 1, 2, etc. as they appear first
in the file, but there are no requirements other than uniqueness.  The
same integer may be used to specify information sets for different players;
this is not ambiguous since the player number appears as well.  Finally,
outcomes are also arbitrarily numbered in the file format in the same way
in which information sets are, except for the special number 0 which 
indicates the null outcome.
</para>

<para>
Information sets and outcomes may (and frequently will) appear multiple
times within a game.  By convention, the second and subsequent times an
information set or outcome appears, the file may omit the descriptive
information for that information set or outcome.  Alternatively, the
file may specify the descriptive information again; however, it must
precisely match the original declaration of the information set or outcome.
If any part of the description is omitted, the whole description must be
omitted.
</para>

<para>
Outcomes may appear at nonterminal nodes.  In these cases, payoffs are
interepreted as incremental payoffs; the payoff to a player for a given
path through the tree is interpreted as the sum of the payoffs at the
outcomes encountered on that path (including at the terminal node).
This is ideal for the representation of games with well-defined
&quot;stages&quot;; see, for example, the file 
<filename>bayes2a.efg</filename> in the Gambit distribution for a
two-stage example of the Bayesian game represented previously.
</para>

<para>
In the following lists, fields which are omittable according to the
above rules are indicated by the label (optional).
</para>

<formalpara>
<title>Format of chance (nature) nodes</title>
<para>
Entries for chance nodes begin with the character <literal>c</literal>.  
Following
this, in order, are
<itemizedlist>
<listitem>
<para>a text string, giving the name of the node</para>
</listitem>
<listitem>
<para>a positive integer specifying the information set number</para>
</listitem>
<listitem>
<para>(optional) the name of the information set</para>
</listitem>
<listitem>
<para>(optional) a list of actions at the information set with
their corresponding probabilities</para>
</listitem>
<listitem>
<para>a nonnegative integer specifying the outcome</para>
</listitem>
<listitem>
<para>(optional)the payoffs to each player for the outcome</para>
</listitem>
</itemizedlist>
</para>
</formalpara>

<formalpara>
<title>Format of personal (player) nodes</title>
<para>
Entries for personal player decision nodes begin with the
character <literal>p</literal>.  Following this, in order, are:
<itemizedlist>
<listitem>
<para>a text string, giving the name of the node</para>
</listitem>
<listitem>
<para>a positive integer specifying the player who owns the node</para>
</listitem>
<listitem>
<para>a positive integer specifying the information set</para>
</listitem>
<listitem>
<para>(optional) the name of the information set</para>
</listitem>
<listitem>
<para>(optional) a list of action names for the information set</para>
</listitem>
<listitem>
<para>a nonnegative integer specifying the outcome</para>
</listitem>
<listitem>
<para>the payoffs to each player for the outcome</para>
</itemizedlist>
</para>
</formalpara>

<formalpara>
<title>Format of terminal nodes</title>
<para>
Entries for terminal nodes begin with the character <literal>t</literal>.
Following this, in order, are:
<itemizedlist>
<listitem>
<para>a text string, giving the name of the node</para>
</listitem>
<listitem>
<para>a nonnegative integer specifying the outcome</para>
</listitem>
<listitem>
<para>the payoffs to each player for the outcome</para>
</listitem>
</itemizedlist>
</para>
</formalpara>

<para>
There is no explicit end-of-file delimiter for the file.
</para>

</sect2>

</sect1>

<sect1 id="file.nfgpayoff">
<title>The strategic game (.nfg) file format, payoff version</title>

<para>
This file format defines a strategic N-player game.  In this version,
the payoffs are listed in a tabular format.  See the next section for
a version of this format in which outcomes can be used to identify
an equivalence among multiple strategy profiles.
</para>

<sect2 id="file.nfgpayoff.sample">
<title>A sample file</title>

<para>
This is a sample file illustrating the general format of the file.  This
file is distributed in the Gambit distribution
under the name <filename>e02.nfg</filename>.
</para>

<programlisting>
NFG 1 R "Selten (IJGT, 75), Figure 2, normal form" 
{ "Player 1" "Player 2" } { 3 2 }

1 1 0 2 0 2 1 1 0 3 2 0 
</programlisting>

<sect2 id="file.nfgpayoff.prologue">
<title>Structure of the prologue</title>

<para>
The prologue is
constructed as follows: the first seven characters must be
<programlisting>
NFG 1 R
</programlisting>
</para>

<note>
<para>
Historical reasons for this structure: the digit 1 is a version number,
but since only version 1 files are supported,
all files have a 1 in this position.  The letter R used to
distinguish files which had rational numbers for numerical data; this
distinction is obsolete, so all new files should have R in this position.
</para>
</note>

<note>
<para>
The current Gambit implementation requires that the first seven
characters of the file be NFG 1 R.  This is an exception to the
whitespace rules given above.  We apologize for any inconvenience.
</para> 
</note>

<para>
The prologue continues with the title of the game. 
Following the title is a list of the names of the
players defined in the game.  This list follows the convention found 
elsewhere in the file of being surrounded by curly braces and delimited
by whitespace (but not commas, semicolons, or any other character).
The order of the players is significant; the first entry in the list
will be numbered as player 1, the second entry as player 2, and so forth.
</para>

<para>
Following the list of players is a list of positive integers.  This
list specifies the number of strategies available to each player, given
in the same order as the players are listed in the list of players.
</para>

</sect2>

<sect2 id="file.nfgpayoff.body">
<title>Structure of the body (list of payoffs)</title>

<para>
The body of the format lists the payoffs in the game.  This is a 
&quot;flat&quot; list, not surrounded by braces or other punctuation.
</para>

<para>
The assignment of the numeric data in this list to the entries in the
strategic game table proceeds as follows.  The list begins with the
strategy profile in which each player plays their first strategy.  The
payoffs to all players in this contingency are listed in the same order
as the players are given in the prologus.  This, in the example file,
the first two payoff entries are <literal>1 1</literal>, which means,
when both players play their first strategy, player 1 receives a payoff
of 1, and player 2 receives a payoff of 1.
</para>

<para>
Next, the strategy of the <emphasis>last</emphasis> player is incremented.  Thus,
player 2's strategy is incremented to his second strategy.  In this
case, when player 1 plays his first strategy and player 2 his second
strategy, the payoffs are <literal>0 2</literal>: a payoff of 0 to
player 1 and a payoff of 2 to player 2.
</para>

<para>
Now, the strategy of the last player is incremented again.  But, the
second player was already playing strategy number 2 of 2.  Thus, his
strategy now &quot;rolls over&quot; to 1, and the strategy of the first
player increments to 2.  Then, the entries <literal>0 2</literal> correspond
to the payoffs of player 1 and player 2, respectively, in the case
where player 1 plays his second strategy, and player 2 his first strategy.
</para>

<para>
In general, the ordering of contingencies is done in the same way that
we count: incrementing the least-significant digit place in the number
first, and then incrementing more significant digit places in the
number as the lower ones &quot;roll over.&quot; The only differences
are that the counting starts with the digit 1, instead of 0, and that
the &quot;base&quot; used for each digit is not 10, but instead is the
number of strategies that player has in the game.
</para>

</sect1>


<sect1 id="file.nfgoutcome">
<title>The strategic game (.nfg) file format, outcome version</title>

<para>
This file format defines a strategic N-player game.  In this version,
the payoffs are defined by means of outcomes, which may appear more than
one place in the game table.  This may give a more compact means of
representing a game where many different strategy combinations map to
the same consequences for the players.  For
a version of this format in which payoffs are listed explicitly, without
identification by outcomes, see the previous section.
</para>

<sect2 id="file.nfgoutcome.sample">
<title>A sample file</title>

<para>
This is a sample file illustrating the general format of the file.  This
file defines the same game as the example in the previous section.
</para>

<programlisting>
NFG 1 R "Selten (IJGT, 75), Figure 2, normal form" { "Player 1" "Player 2" }

{
{ "1" "2" "3" }
{ "1" "2" }
}

{
{ "" 1, 1 }
{ "" 0, 2 }
{ "" 0, 2 }
{ "" 1, 1 }
{ "" 0, 3 }
{ "" 2, 0 }
}
1 2 3 4 5 6
</programlisting>

</sect2>

<sect2 id="file.nfgoutcome.prologue">
<title>Structure of the prologue</title>

<para>
The prologue is
constructed as follows: the first seven characters must be
<programlisting>
NFG 1 R
</programlisting>
</para>

<note>
<para>
Historical reasons for this structure: the digit 1 is a version number,
but since only version 1 files are supported,
all files have a 1 in this position.  The letter R used to
distinguish files which had rational numbers for numerical data; this
distinction is obsolete, so all new files should have R in this position.
</para>
</note>

<note>
<para>
The current Gambit implementation requires that the first seven
characters of the file be NFG 1 R.  This is an exception to the
whitespace rules given above.  We apologize for any inconvenience.
</para> 
</note>

<para>
The prologue continues with the title of the game. 
Following the title is a list of the names of the
players defined in the game.  This list follows the convention found 
elsewhere in the file of being surrounded by curly braces and delimited
by whitespace (but not commas, semicolons, or any other character).
The order of the players is significant; the first entry in the list
will be numbered as player 1, the second entry as player 2, and so forth.
</para>

<para>
Following the list of players is a list of strategies.  This is a nested
list; each player's strategies are given as a list of text labels,
surrounded by curly braces.
</para>

<para>
The prologue closes with a list of outcomes.  This is also a nested list.
Each outcome is specified by a text string, followed by a list of numerical
payoffs, one for each player defined.  The payoffs may optionally be
separated by commas, as in the example file.  The outcomes are implicitly
numbered in the order they appear; the first outcome is given the number
1, the second 2, and so forth.
</para>

</sect2>

<sect2 id="file.nfgoutcome.body">
<title>Structure of the body (list of outcomes)</title>

<para>
The body of the file is a list of outcome indices.  These are presented
in the same lexicographic order as the payoffs in the payoff file format;
please see the documentation of that format for the description of the
ordering.  For each entry in the table, a nonnegative integer is given,
corresponding to the outcome number assigned as described in the prologue
section.  The special outcome number 0 is reserved for the &quot;null&quot;
outcome, which is defined as a payoff of zero to all players.
The number of entries in this list, then, should be the same as the
product of the number of strategies for all players in the game.
</para>

</sect2>

</sect1>
 

</chapter>

