<refentry id="nash.lcp">
<refentryinfo>
<date>2005-08-15</date>
</refentryinfo>

<refmeta>
<refentrytitle>
<application>gambit-lcp</application>
</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo>Gambit 1.0</refmiscinfo>
</refmeta>

<refnamediv>
<refname>
<application>gambit-lcp</application>
</refname>
<refpurpose>
Computes Nash equilibria in a two-player game by solving a
linear complementarity program
</refpurpose>
</refnamediv>

<refsynopsisdiv>
<refsynopsisdivinfo>
<date>2005-08-15</date>
</refsynopsisdivinfo>
<cmdsynopsis>
<command>gambit-lcp</command>
<arg><option>-d </option><replaceable class="parameter">DECIMALS</replaceable></arg>
<arg><option>-e </option><replaceable class="parameter">EQA</replaceable></arg>
<arg><option>-r </option><replaceable class="parameter">DEPTH</replaceable></arg>
<arg><option>-S</option></arg>
<arg><option>-P</option></arg>
<arg><option>-h</option></arg>
<arg><option>-q</option></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<refsect1info>
<date>2005-08-15</date>
</refsect1info>
<title>DESCRIPTION</title>
<para>
<command>gambit-lcp</command> reads a two-player game on
standard input and computes Nash equilibria 
by finding solutions to a linear complementarity problem.
For extensive games, the program uses the sequence form representation 
of the extensive game, as defined by Koller, Megiddo, and von Stengel,
and applies the algorithm developed by Lemke.
For strategic games, the program using the method of Lemke and Howson.
</para>

<para>
It is known that this method may not locate all equilibria in a game.
Some equilibria in some games 
are not accessible using the path-following procedure
implemented in this program.
</para>

</refsect1>

<refsect1>
<title>OPTIONS</title>
<variablelist>
<varlistentry>
<term><option>-d </option><replaceable class="parameter">DECIMALS</replaceable></term>
<listitem>
<para>
By default, this program computes using exact rational arithmetic.  Since
the extreme points computed by this method are guaranteed to be rational
when the payoffs in the game are rational, this permits exact computation
of the equilibrium set.  Computation using rational arithmetic is in
general slow, however.  For most games, acceptable results can be obtained
by computing using the computer's native floating-point arithmetic.
Using this flag enables computation in floating-point, and
expresses all output using decimal representations with 
<replaceable class="parameter">DECIMALS</replaceable> digits.  
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-D</option></term>
<listitem>
<para>
Turn on output of detailed profile information.  For each equilibrium
found, give a tabular listing of all action or strategy labels, the
probability the action or strategy is played in equilibria, and the
expected payoff to playing that action or strategy.  For behavior strategy
profiles, also output information about beliefs at nodes where beliefs
are well=defined.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-e </option><replaceable class="parameter">EQA</replaceable></term>
<listitem>
<para>
By default, this program computes all equilibria which are accessible
from the extraneous solution of the linear complementarity program.
Note that this may be all equilibria, but need not be.  Setting this
parameter terminates the program after the specified number of equilibria
are found, if that many exist and are accessible.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-r </option><replaceable class="parameter">DEPTH</replaceable></term>
<listitem>
<para>
When computing more than one equilibrium, the program searches recursively,
starting anew at the complementary basic feasible solution corresponding
to each equilibrium found.  Specifying this parameter restricts the
maximum depth of this recursive process.  Note that restircting the
depth of the search may result in the program terminating without finding
all accessible equilibria.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-S</option></term>
<listitem>
<para>
By default, the program uses behavior strategies for extensive games;
this switch instructs the program to use reduced strategic game strategies
for extensive games.  (This has no effect for strategic games, since
a strategic game is its own reduced strategic game.)
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-P</option></term>
<listitem>
<para>
By default, the program computes all pure-strategy Nash equilibria in
an extensive game.  This switch instructs the program to find only
pure-strategy Nash equilibria which are subgame perfect.
(This has no effect for strategic games, since there are no proper
subgames of a strategic game.)
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-h</option></term>
<listitem>
<para>
Prints a help message listing the available options.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-q</option></term>
<listitem>
<para>
Suppresses printing of the banner at program launch.
</para>
</listitem>
</varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>USAGE</title>
<para>
<command>gambit-lcp</command> [OPTIONS] < file.[en]fg
</para>
</refsect1>

<refsect1>
<title>BUGS</title>
<para>
None known.
</para>
</refsect1>

<refsect1>
<title>AUTHOR</title>
<para>
<author>
<firstname>Theodore</firstname>
<surname>Turocy</surname>
<contrib>Original author</contrib>
</author>
</para>
</refsect1>
</refentry>

