Gambit Closed Bugs List

---------------

ITEM 0003: LPSolve[] fails when stopAfter != 1

DATE:     9/8/1999 by TLT (was Bugs C18 and C27 in bugs_gcl)
AFFECTS:  GCL (GUI as well?), all platforms(?)
STATUS:   CLOSED
SEVERITY: MAJOR
DETAILS:

RDM: This bug was "fixed" by getting rid of the "stopAfter" parameter.
Since there are other ways of computing all Nash equilibria for a 2
person const sum game, and the code to do this through the LP is not
completed, getting this working is not essential.  So it was just disabled, to prevent anyone from using this part of the code. 

  GCL1:= << n:=LoadNfg["../nfg/csg1.nfg"]
  (Nfg) ""
  GCL2:= << m:=LpSolve[n,stopAfter->0]

  c: { 0.000000 0.000000 0.000000 1.000000 }
  uc: { 0.000000 0.000000 0.000000 0.000000 }
  col: 1 cost: 0.000000 label: 4 x: 1.000000
  col: 2 cost: -1.000000 label: -2 x: In function LpSolve[], in file "stdudfs.gcl" at line 463:
  In function LpSolve[], in file "console" at line 2:
  GCL EXCEPTION:Bad index in gArray; Caught in gcl.cc, main()

Include["gclini.gcl"]
Include["/home/mill/rdm/gambit/bin/stdudfs.gcl"]
GCL1:= << n:=LoadNfg["../nfg/zero.nfg"]
(Nfg) "Two person 2 x 2 game with all zero payoffs"
GCL2:= << LpSolve[n]
{ (Mixed) { 1.000000 0.000000 }{ 1.000000 0.000000 } }
GCL3:= << LpSolve[n,stopAfter->2]

c: { 0.000000 0.000000 1.000000 }
uc: { 0.000000 0.000000 0.000000 }
col: 1 cost: 0.000000 label: 3 x: 1.000000
col: 2 cost: 0.000000 label: -2 x: In function LpSolve[], in file "/home/mill/rdm/gambit/bin/stdudfs.gcl" at line 461:
In function LpSolve[], in file "console" at line 3:
EXCEPTION: Bad index in gArray
GCL4:= << Quit

Note: Bug does not occur if stopAfter->1

---------------

ITEM 0004: Algorithms producing nonsense on games of imperfect recall

DATE:     9/8/1999 by TLT (was Bug C21 in bugs_gcl)
AFFECTS:  GCL, GUI; all platforms
STATUS:   CLOSED 9/9/1999 by TLT
SEVERITY: MAJOR
DETAILS:

  GCL1:= << e:=LoadEfg["myerson.efg"]
  (Efg) "Myerson - Game with no solution in behavioral strategies"
  GCL2:= << IsPerfectRecall[e]       
  False
  GCL3:= << b:=LcpSolve[e]              
  { (Behav) { { 0.000000 1.000000 }{ 0.250000 0.750000 } }{ { 0.500000 0.500000 } } }
  GCL4:= << IsNash[b]
  { False }
  GCL5:= << OneNash[e]   
  { (Behav) { { 0.500000 0.500000 }{ 1.000000 1.000000 } }{ { 0.500000 0.500000 } } }
  GCL6:= << IsNash[GCL5] 
  { Maybe }

COMMENTS:
TLT 9/9/1999.  Behavior strategies now return Unknown for these quantities
for games of imperfect recall.  Also, algorithms warn in both GUI and GCL
before solving, so the user is aware of the possible pitfalls.

---------------

ITEM 0006:  Infinite loop in LcpSolve[nfg]

DATE:     9/8/1999 by TLT (was Bug C28 in bugs_gcl)
AFFECTS:  GCL (all platforms?)
STATUS:   CLOSED 9/13/99 by RDM
SEVERITY: MAJOR
DETAILS:

The following hangs the GCL:

  GCL1:= << k:=10;
  GCL2:= << n:=Randomize[NewNfg[{k,k},True],seed->142];
  GCL3:= << LcpSolve[n]

RDM: 9/13/99: This bug was inadvertently fixed by implementing scaling to fix ITEM 0001

---------------

ITEM 0007:  Include file names not printable

DATE:     9/8/1999 by TLT (was Bug C31 in bugs_gcl)
AFFECTS:  GCL (MSWindows)
STATUS:   CLOSED 9/8/1999 by TLT
SEVERITY: MINOR
DETAILS:

Here, the GCL is being run from the directory c:\gambit96, and the
gclini.gcl and stdudfs.gcl files are in c:\gambit96\bin.

  Include["C:\gambit9in\gclini.gcl"]
  Include["C:\gambit9in\stdudfs.gcl"]
  GCL1: << Include["gcl\nqre.gcl"]
  True
  Include["gcl
  qre.gcl"]

Note that it does not print the names of the included files correctly,
even though it locates and loads them all correctly.  Evidently it is
treating the "\n" in the pathname "gcl\nqre.gcl" as a new line
character when it prints it even though it actually loads the file OK.
This is probably what is happening with the "\b" in "c:\gambit96\bin"
also.

COMMENTS
TLT 9/8/1999.  Fixed this by forcing all path names to have forward slashes,
regardless of operating system.  (This works fine for DOS paths.)

---------------

ITEM 0010:  GCL segfaults; orphan variables suspected

DATE:     9/8/1999 by TLT (was Bug C33 in bugs_gcl)
AFFECTS:  GCL (all platforms?)
STATUS:   CLOSED 9/9/1999 by TLT
SEVERITY: CRUCIAL
DETAILS:

Put the following commands in the file test.gcl

  e:= NewEfg[];
  P1 := NewPlayer[e, "P1"];
  e:= NewEfg[];
  P1 := NewPlayer[e, "P1"];
  e:= NewEfg[];
  P1 := NewPlayer[e, "P1"];

Then 

  Include["test.gcl"] leads to   

GCL1:= << Include["test.gcl"]     
True
A segmentation fault has occurred

On the other hand, if P1 is deallocated before each call, as in 

  e:= NewEfg[];
  P1 := NewPlayer[e, "P1"];
  e:= NewEfg[];
  P1:=;P1 := NewPlayer[e, "P1"];
  e:= NewEfg[];
  P1:=;P1 := NewPlayer[e, "P1"];

then it is OK.  Also, if the contents of test.gcl are run from the
command line, it is OK.

COMMENTS:
TLT 9/9/1999.  Turned out to be a problem in accurately keeping track
of references to games when using reference-type Portions.  This affected
all game types, not just EFPLAYER.

---------------

ITEM 0020:  Field width on dialog boxes

DATE:     9/8/1999 by TLT (was Bug D35 in bugs_gui)
AFFECTS:  GUI, all platforms
STATUS:   CLOSED 9/10/1999 by TLT
SEVERITY: CRUCIAL
DETAILS:

Examples:

1. On Solve->Custom->NFG->SimpDiv, the #restarts field is too narrow
on MSWin.  

2. On File Save, the field for the decimal places is too narrow to see
the number.  There were other dialogs with similar problems.  Can't
recall them now.

COMMENTS:
TLT 9/8/1999.  These are fine on my display under Win95.  I have experienced
similar problems when running the X version remotely on my display, however.
We need to experiment across several displays to determine what causes
this and how to deal with it in as system-independent a way as possible.

TLT 9/10/1999.  These are being solved by the use of the layout constraints
feature of wxWindows.

---------------

ITEM 0021:  Bug in interactive selection of subgame solutions

DATE:     9/8/1999 by TLT (was Bug D37 in bugs_gui)
AFFECTS:  GUI (all platforms?)
STATUS:   CLOSED 9/9/1999 by TLT
SEVERITY: CRUCIAL
DETAILS:

The following causes a crash:

Load coord2ts.efg, and solve via Solve->Custom->Efg->LCP (noDomElim,
Interactive selection, findAll)

COMMENTS:
TLT 9/8/1999.  I cannot reproduce this on my machine.

TLT 9/9/1999.  Turned out to be a division by zero problem in the status
indicator for sequence form.

---------------

ITEM 0022:  Dominance info not displayed on normal form game.  

DATE:     9/8/1999 by TLT (was Bug D38 in bugs_gui)
AFFECTS:  GUI (all platforms)
STATUS:   CLOSED 9/9/1999 by TLT
SEVERITY: CRUCIAL
DETAILS:

Load poker.efg, generate a normal form game, and do
Supports->ElimDom (Weak,Pure) The dominance information should be
displayed in the normal form, but it is not displayed, even if you
select Inspect->Info->DisplayDominance

COMMENTS:
TLT 9/8/1999.  This is because the dominance elimination code does not
return any dominance info for the GUI to display.  This will be added
shortly, and the GUI modified to take advantage.

COMMENTS:
TLT 9/9/1999.  Fixed.

---------------

ITEM 0023:  Windows don't dismiss via window manager close control

DATE:     9/8/1999 by TLT (was Bug 5.2 in bugs_gui)
AFFECTS:  GUI (all platforms)
STATUS:   CLOSED 9/10/1999 by TLT
SEVERITY: CRUCIAL
DETAILS:

> 2. Why the solution list window does not vanish from the upper right
> close button?

COMMENTS:
RDM 8/20/1999.  Solution list window is fixed, but there are still a few
with the problem -- i.e, in the inspect solution window, the edit
mixed window cannot be deleted.  Also, the Edit->Strats->Label dialog
box (and perhaps others as well) can not be gotten rid of.  Also,
after this window has been created, the main Gambit window can be
dismissed and the child windows do not get dismissed.  (this is on
Linux) N.B. the "close" button here refers to the window manager close
button.

TLT 9/8/1999.  Mixed strategy edit window should now be fixed (works on
Windows, untested on unix.)  There is no such dialog as Edit->Strats->Label;
all the dialogs on the Edit menu on the normal form seem just fine to me.
This sounds like it might be an outdated problem; I replaced a spreadsheet
version of that dialog months ago which did have a similar problem.

TLT 9/10/1999.  These will be checked as we finalize dialog boxes. 

---------------

ITEM 0032:  Perfect equilibrium test for 2-player games

DATE:     9/8/1999 by TLT/RDM
AFFECTS:  GUI, GCL; all platforms
STATUS:   CLOSED 9/9/1999 by RDM
SEVERITY: CRUCIAL
DETAILS:

Use LP from VanDamme, p. 49. I added code to
check whether a pure equilibrium is mixed dominated, but still need to
add code for mixed equilibria, and hook up to IsPerfect.

---------------

ITEM 0035:  LiapSolve not setting solutions to Nash

DATE:     9/8/1999 by TLT/RDM
AFFECTS:  GCL; a
STATUS:   CLOSED 9/9/1999 by TLT
SEVERITY: CRUCIAL
DETAILS:

GCL1:= << e:=LoadEfg["../efg/e01.efg"
GCL2:= << AllNash[e]                  
 Warning: Entering infinite loop.  Use Ctl-C to exit.
{ (Behav) { { 1.000000 0.000000 } }{ { 0.999998 0.000002 } }{ { 0.248126 0.751874 } },
  (Behav) { { 1.000001 0.000000 } }{ { 0.999992 0.000008 } }{ { 0.231082 0.768918 } },
  (Behav) { { 1.000000 0.000000 } }{ { 1.000000 0.000000 } }{ { 0.247619 0.752381 } },
  (Behav) { { 1.000001 0.000000 } }{ { 0.999991 0.000009 } }{ { 0.246676 0.753324 } },
  (Behav) { { 1.000001 0.000000 } }{ { 0.999991 0.000009 } }{ { 0.249250 0.750750 } },
  (Behav) { { 1.000000 0.000000 } }{ { 0.999994 0.000006 } }{ { 0.234463 0.765537 } },
  (Behav) { { 1.000001 0.000000 } }{ { 0.999994 0.000006 } }{ { 0.238701 0.761299 } },
  (Behav) { { 1.000000 0.000000 } }{ { 0.999999 0.000001 } }{ { 0.246528 0.753472 } },
  (Behav) { { 0.999992 0.000008 } }{ { 0.999985 0.000015 } }{ { 0.249969 0.750031 } } }
GCL3:= << IsNash[GCL2]
{ Unknown,
  Unknown,
  Unknown,
  Unknown,
  Unknown,
  Unknown,
  Unknown,
  Unknown,
  Unknown }

COMMENTS:
TLT 9/9/1999.  Turned out to be incorrect setting of m_epsilon when 
constructing a solution from a BehavProfile<gNumber>.  Still leaves unresolved
what a good setting of m_epsilon is.

---------------

ITEM 0033:  Need capability to output sequence form

DATE:     9/8/1999 by TLT/RDM
AFFECTS:  GUI, GCL; all platforms
STATUS:   OPEN
SEVERITY: CRUCIAL
DETAILS:

Should be able to generate the sequence form for a game.  The code
exists for n-player games, but at a minimum needs to be made available
to the user for 2-player games.

