#
# Generic makefile for Gambit Project
# 
# Makes both gui and gcl targets on multiple platforms, and 
# automatically updates dependencies (no need to do make depend).
#
# Rename this makefile to 'Makefile', and then use 'make gui'
# to make the gui, and 'make gcl' to make the gcl.
#
# Executable is named gcl_$(SYSNAME), or gui_$(SYSNAME), where 
# $(SYSNAME) is a platform specific identifier, (eg gcl_Linux 
# or gui_SunOS_sun4m).
#
# Object files are put in platform specific subdirectories so that 
# the same source directory can be used for multiple platforms.  
# 
# This Makefile requires 'make.filelist' to exist in the same directory
# 'make.filelist' contains the current file list, and defines
# the 'SOURCE' and 'OBJECT' variables. 
#
# The Makefile also requires the subdirectory ./fake to exist. This
# subdirectory contains "fake" (empty)  wxwin and system header
# files to prevent tracking down dependencies in those files.  
#
# Do 'cvs co -d. gambit/sources' in your gambit/sources directory to 
# initialize the ./fake (and other subdirectories) needed by the makefile
#

.SUFFIXES:   $(.SUFFIXES) .cc

ifeq ($(shell uname -s), SunOS)
SYSNAME = $(shell uname -s)_$(shell uname -m)
else
SYSNAME = $(shell uname -s)
endif

OBJDIR = obj_$(SYSNAME)

vpath %.o  $(OBJDIR)
vpath %.h  fake

.cc.o:
	$(CC) $(CFLAGS) -c $< -o $(OBJDIR)/$@

%.d: %.cc
	@echo updating dependencies: $@
	@$(SHELL) -ec '$(CC) -MM $(CPPFLAGS) -Ifake $< \
		| sed '\''s/\($*\)\.o[ :]*/\1.o $@ : /g'\'' > $@; \
		[ -s $@ ] || rm -f $@'

CC = g++ 
CFLAGS = -O2 -Wall -DGDOUBLE -D__NO_MATH_INLINES -Dwx_motif \
	-fguiding-decls -fno-implicit-templates $(INCDIR) 

# Generic WxWin information
WXDIR = /home/mill/gambit/wxwin
WXLIBDIR = -L$(WXDIR)/lib -L/usr/local/X11/lib -L/usr/X11/lib
WXINCDIR = -I$(WXDIR)/include/base -I$(WXDIR)/include/x 
WXLIB = -lwx_motif_$(SYSNAME)

# Site Specific information

ifeq ($(SYSNAME), SunOS_sun4m)
XINCDIR = -I/usr/local/X11R6.4/include/X11
XLIBDIR = -L/usr/local/X11R6.4/lib 
XLIB = -lsocket -lnsl -lX11 -lXm -lXt -lgen -lm
else 
XINCDIR = -I/usr/local/include/X11
XLIBDIR = -L/usr/local/X11/lib -L/usr/X11/lib
XLIB = -lX11 -lXm -lXp -lXext -lXt -lm
endif

# Combine the site dependent and independent data

LIBDIR = $(WXLIBDIR) $(XLIBDIR)
INCDIR = $(WXINCDIR) $(XINCDIR) -Ibitmaps

GUILIBS = $(WXLIB) $(XLIB)

# Include the list of source files:

include make.filelist

# Include the list of dependencies:

include	$(SOURCES:.cc=.d)

# Targets:

$(OBJDIR):
	mkdir $(OBJDIR)

gcl_$(SYSNAME):	$(OBJDIR) $(ALLGCL_OBJECTS) $(ALLGCL_DEPENDS)
	cd $(OBJDIR); $(CC) $(ALLGCL_OBJECTS) -o ../gcl_$(SYSNAME) -lm; cd ..

gcl:	gcl_$(SYSNAME);

gui_$(SYSNAME):	$(OBJDIR) $(ALLGUI_OBJECTS) 
	cd $(OBJDIR); $(CC) $(ALLGUI_OBJECTS) $(LIBDIR) $(GUILIBS) -o ../gui_$(SYSNAME); cd ..

gui:    gui_$(SYSNAME);

clean:	
	rm -f $(OBJDIR)/*.o

readefg.cc:  readefg.yy
	bison++ -d -h readefg.h -o readefg.cc readefg.yy

readnfg.cc:  readnfg.yy
	bison++ -d -h readnfg.h -o readnfg.cc readnfg.yy

gcompile.cc: gcompile.yy
	bison++ -d -h gcompile.h -o gcompile.cc gcompile.yy

manifest:
	g++ -MM -MG $(SOURCES) | sed 'y/\ / \n/' | sort | uniq | grep -v ':' > Manifest


