#
# FILE: Makefile.generic -- Makefile for Gambit 
#
# $Id$
# 
# Makes both gui and gcl targets on multiple platforms, and 
# automatically updates dependencies.
#
# Rename or symlink this makefile to 'Makefile', and then use 'make gui'
# to make the gui, and 'make gcl' to make the gcl.
#
# Executable are named gcl_$(SYSNAME) and gui_$(GUI)_$(SYSNAME), 
# where SYSNAME represents the OS and GUI represents the X libraries 
# (motif/xt/none) that are available on the system (e.g. gui_Linux_xt or
# gcl_SunOS_5.6).  SYSNAME and GUI must be passed to this makefile
# e.g. "make -f Makefile2.generic SYSNAME=solaris GUI=motif".
#
# Object files are put in platform-specific subdirectories so that 
# the same source directory can be used for multiple platforms.  
# 
# This Makefile requires 'make.filelist' to exist in the same directory.
# 'make.filelist' contains the current file list, and defines
# the 'ALLGCL_OBJECTS' and 'ALLGUI_OBJECTS' variables. 
#
# Note: If files are moved or renamed, this makefile can get "stuck".  
#       In this case do 'rm *.d' or 'make clean'

#
# Configuration options
#
# These defines list all the customizable configuration options
# These should be altered to fit the target system's setup
#

#
# define the names of the executables created
#
GCLBINARY = gcl_linux
WXGCLBINARY = wxgcl_gtk_linux
GUIBINARY = gambit_gtk_linux

# Generic WxWin information:
# 
#   WXINCDIR = location of wxwin include files
#   WXLIBDIR = location of wxwin libraries
#   WXLIB    = any wx libraries used

WXDIR = /home/gambit/wxGTK
WXLIBDIR = -L$(WXDIR)/lib
WXINCDIR = -I$(WXDIR)/include -D__WXGTK__
WXLIB = -lwx_gtk

# Motif defines
#WXDIR = /home/gambit/wxwin
#WXLIBDIR = -L$(WXDIR)/lib
#WXINCDIR = -I$(WXDIR)/include -D__WXMOTIF__
#WXLIB = -lwx_motif


# Site Specific information:
#
#   DEFINES = any compiler defines needed 
#   XINCDIR = location of X include files
#   XLIBDIR = location of X libraries
#   XLIB    = any X libraries used

#ifeq ($(SYSNAME), SunOS_5.6)
#XINCDIR = -I/usr/openwin/include -I/usr/dt/include
#XLIBDIR = -L/usr/openwin/lib -L/usr/dt/lib
#XLIB = -lXm -lXmu -lXt -lX11 -lsocket -lnsl -lgen -lm
#else 
#ifeq ($(SYSNAME), HP-UX)
#DEFINES = -D_HPUX_SOURCE -DSVR4
#XINCDIR = -I/usr/include/X11R5 -I/usr/include/Motif1.2
#XLIBDIR = -L/usr/lib/X11R5 -L/usr/lib/Motif1.2
#XLIB = -lXm -lXt -lX11 -lc -lm -lg++

XINCDIR = -I/usr/X11R6/include
XLIBDIR = -L/usr/X11R6/lib 
XLIB = -lgtk -lgdk -lpthread
#Linux motif libraries
#XLIB = -lX11 -lXm -lXp -lXpm -lXmu -lXext -lXt -lpthread -ldl -lm


# define compiler and flags

CC = g++
CFLAGS = -Wall $(DEFINES) \
	 -fguiding-decls -fno-implicit-templates $(INCDIR) 
OBJECT_SUFFIX = .o
 
#
# define directory where object files are put
#
OBJDIR = obj_gtk_linux
vpath %.o  $(OBJDIR)


# rule for creating .o (object) files from .cc files

%.o: %.cc
	$(CC) $(CFLAGS) -c $< -o $(OBJDIR)/$@

# rule for creating .d (dependency) files from .cc files

%.d: %.cc
	@echo updating dependencies: $@
	@$(SHELL) -ec '$(CC) -MM $(CPPFLAGS) $(INCDIR) $< \
		| sed '\''s/\($*\)\.o[ :]*/\1.o $@ : /g'\'' > $@; \
		[ -s $@ ] || rm -f $@'

# Combine the site dependent and independent data

LIBDIR = $(WXLIBDIR) $(XLIBDIR)
INCDIR = -I. -I../include $(WXINCDIR) $(XINCDIR) -Ibitmaps
GUILIBS = $(WXLIB) $(XLIB)

# Include the list of files, which defines
#
# ALLGCL_SOURCES, ALLGCL_OBJECTS  source, object files for GCL
# ALLGUI_SOURCES, ALLGUI_OBJECTS  source, object files GUI
# SOURCES,        OBJECTS         all source and object files

include make.filelist

# Include the list of dependencies:

include	$(SOURCES:.cc=.d)

# Targets:

$(OBJDIR):
	mkdir $(OBJDIR)

all:	gcl wxgcl gui

gcl:	$(OBJDIR) $(TTYGCL_OBJECTS)
	cd $(OBJDIR); $(CC) $(TTYGCL_OBJECTS) -o ../$(GCLBINARY) -L../base -L../math -lgambit_base -lgambit_math -lm; cd ..

wxgcl:	$(OBJDIR) $(WXGCL_OBJECTS)
	cd $(OBJDIR); \
	$(CC) $(WXGCL_OBJECTS) $(LIBDIR) $(GUILIBS) \
	    -o ../$(WXGCLBINARY) -L../base -L../math -lgambit_base -lgambit_math; cd ..

gui:	$(OBJDIR) $(ALLGUI_OBJECTS)
	cd $(OBJDIR); \
	$(CC) $(ALLGUI_OBJECTS) $(LIBDIR) $(GUILIBS) \
	    -o ../$(GUIBINARY) -L../base -L../math -lgambit_base -lgambit_math; cd ..

readefg.cc:  readefg.yy
	bison -p efg_yy -o readefg.cc readefg.yy

readnfg.cc:  readnfg.yy
	bison -p nfg_yy -o readnfg.cc readnfg.yy

gcompile.cc: gcompile.yy
	bison -p gcl_yy -o gcompile.cc gcompile.yy

clean:	
	rm -f $(OBJDIR)/*.o $(GCLBINARY) $(WXGCLBINARY) $(GUIBINARY)

manifest:
	g++ -MM -MG $(SOURCES) | sed 'y/\ / \n/' | sort | uniq | \
        grep -v ':' > Manifest


